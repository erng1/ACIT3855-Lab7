openapi: 3.0.0
#servers:
#  # Added by API Auto Mocking Plugin
#  - description: SwaggerHub API Auto Mocking
#    url: https://virtserver.swaggerhub.com/eng69/ACIT3855-Lab1/1.0.0
info:
  description: This API receives weather updates from weather agencies
  version: "1.0.0"
  title: Weather Forecast API
  contact:
    email: eng69@my.bcit.ca
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
tags:
  - name: agency
    description: Operations available to weather agencies
paths:
  /location/weatherForecast:
    get:
      summary: Gets a weather forecast report from history
      operationId: app.get_weather_forecast_report
      description: Gets weather forecasts reports from the event store
      parameters:
        - name: index
          in: query
          description: Gets the WF at the index in the event store
          schema:
            type: integer
            example: 100
      responses:
        '200':
          description: Successfully returned a weather forecast event
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: '#/components/schemas/WeatherForecastReport'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '404':
          description: Not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string

  /location/miscWeather:
    get:
      summary: Gets a misc weather report from history
      operationId: app.get_misc_weather_report
      description: Gets misc weather report from event store
      parameters:
        - name: index
          in: query
          description: Gets the MW at the index in the event store
          schema:
            type: integer
            example: 100
      responses:
        '200':
          description: Successfully returned a misc weather event
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: '#/components/schemas/MiscWeatherReport'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '404':
          description: Not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string

components:
  schemas:
    WeatherForecastReport:
      required:
        - location_id
        - location_name
        - weather
        - temperature
        - timestamp
      properties:
        location_id:
          type: integer
          example: 123
        location_name:
          type: string
          example: 'Vancouver'
        weather:
          type: string
          example: 'Sunny'
        temperature:
          type: integer
          example: 15
        timestamp:
          type: string
          format: date-time
          example: '2016-08-29T09:12:33.001Z'
      type: object

    MiscWeatherReport:
      required:
        - location_id
        - location_name
        - precipitation
        - humidity
        - wind
        - air_quality
        - timestamp
      properties:
        location_id:
          type: integer
          example: 123
        location_name:
          type: string
          example: 'Vancouver'
        precipitation:
          type: string
          example: '10%'
        humidity:
          type: string
          example: '50%'
        wind:
          type: string
          example: '3 km/h'
        air_quality:
          type: string
          example: 'Low Risk'
        timestamp:
          type: string
          format: date-time
          example: '2016-08-29T09:12:33.001Z'
      type: object